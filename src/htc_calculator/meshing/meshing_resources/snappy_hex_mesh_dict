/*--------------------------------*- C++ -*----------------------------------*\
 Generated by PyCFD
 <info>
\*---------------------------------------------------------------------------*/

/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh <castellated_mesh>;
snap            <snap>;
addLayers       <add_layers>;

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance <merge_tolerance>;

// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
// Surfaces are used
// - to specify refinement for any mesh cell intersecting it
// - to specify refinement for any mesh cell inside/outside/near
// - to 'snap' the mesh boundary to the surface
geometry
{
<stls>
};



// Settings for the castellatedMesh generation.
castellatedMeshControls
<castellated_mesh_controls>



// Settings for the snapping.
snapControls
<snap_controls>



// Settings for the layer addition.
addLayersControls
<layer_setup>



// Mesh quality settings.
meshQualityControls
<mesh_quality_controls>


// Advanced

// Write flags
writeFlags
(
    scalarLevels    // write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);


// ************************************************************************* //
